from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Filter, Command
from aiogram.fsm.context import FSMContext
from app.states import Newsletter
from app.database.requests import get_users, get_users
import asyncio
from aiogram import Bot
import app.text as txt
from aiogram.exceptions import TelegramAPIError, TelegramForbiddenError

admin = Router()

class Admin(Filter):
    async def __call__(self, message: Message):
        return message.from_user.id in [1075213318]
    

@admin.message(Admin(), Command('newsletter'))
async def newsletter(message: Message, state: FSMContext):
    await state.set_state(Newsletter.message)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏')


@admin.message(Newsletter.message)
async def newsletter_message(message: Message, state:FSMContext):
    await state.clear()
    await message.answer('–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å')
    users = await get_users()
    for user in users:
        try:
            await message.send_copy(chat_id=user.tg_id)
        except Exception as e:
            print(e)
    await message.answer('–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
    

@admin.message(Admin(), Command('news'))
async def send_broadcast(message:Message, bot: Bot):
    users = await get_users()
    user_ids = [user.tg_id for user in users]

    total_users = len(user_ids)
    success_count = 0
    blocked_count = 0
    failed_count = 0

    await message.answer(f"üì¢ –ù–∞—á–∏–Ω–∞—é —Ä–∞—Å—Å—ã–ª–∫—É... –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}")

    for user_id in user_ids:
        try:
            await bot.send_message(
                user_id,txt.text,
                parse_mode="Markdown"
            )
            success_count += 1
        except TelegramForbiddenError:  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞
            blocked_count += 1
        except TelegramAPIError as e:  # –õ—é–±–∞—è –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞
            failed_count += 1
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ {user_id}: {e}")
        
        await asyncio.sleep(0.3)  # –ó–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏

    await message.answer(
        f"‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n"
        f"üì¨ –£—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: {success_count}\n"
        f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –±–æ—Ç–∞: {blocked_count}\n"
        f"‚ùå –û—à–∏–±–∫–∏: {failed_count}"
    )


