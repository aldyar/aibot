from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command
from app.states import Chat, Image
from aiogram.fsm.context import FSMContext
import app.keybords as kb
from app.generators import gpt_text, gpt_image
from app.database.requests import set_user, get_user, calculate
from decimal import Decimal


import logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)


user = Router()


@user.message(F.text == '‚ùå–û—Ç–º–µ–Ω–∞')
@user.message(CommandStart())
async def cmd_start(message: Message):
    await set_user(message.from_user.id)
    await message.answer('ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n–Ø AI GPT-4 Bot, –≤—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–∞–º—ã–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –ò–ò –º–æ–¥–µ–ª–∏!', reply_markup=kb.main)


@user.message(F.text == 'üí¨–ß–∞—Ç')
async def chatting(message: Message, state: FSMContext):
    user = await get_user(message.from_user.id)
    if Decimal(user.balance)>0:
        await state.set_state(Chat.text)
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å', reply_markup=kb.cancel)
    else:
        await message.answer('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ.')


@user.message(Chat.text)
async def chat_response(message: Message, state: FSMContext):
    user = await get_user(message.from_user.id)
    if Decimal(user.balance)>0:
        await state.set_state(Chat.wait)
        response = await gpt_text(message.text, 'gpt-4o')
        await calculate(message.from_user.id, response['usage'], 'gpt-4o', user)
        await message.answer(response['response'],parse_mode='Markdown')
        await state.set_state(Chat.text)
    else:
        await message.answer('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ.')


@user.message(Chat.wait, ~F.text.startswith('/'))
async def wait_wait(message:Message):
    await message.answer('–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≥–µ–Ω–µ–∏—Ä—É–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.')


@user.message(Image.wait, ~F.text.startswith('/'))
async def wait_wait(message:Message):
    await message.answer('–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≥–µ–Ω–µ–∏—Ä—É–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.')


@user.message(F.text == 'üñº–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–∏–Ω–æ–∫')
async def chatting(message: Message, state: FSMContext):
    user = await get_user(message.from_user.id)
    if Decimal(user.balance)>0:
        await state.set_state(Image.text)
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å', reply_markup=kb.cancel)
    else:
        await message.answer('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ.')


@user.message(Image.text)
async def chat_response(message: Message, state: FSMContext):
    user = await get_user(message.from_user.id)
    if Decimal(user.balance)>0:
        await state.set_state(Image.wait)
        response = await gpt_image(message.text, 'dall-e-3')
        await calculate(message.from_user.id, response['usage'], 'dall-e-3', user)
        print(response)
        try:
            await message.answer_photo(photo=response['response'])
        except Exception as e:
            print(e)
            await message.answer(response['response'])
        await state.set_state(Image.text)
    else:
        await message.answer('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ.')



@user.message(Command('contact'))
async def contact(message: Message):
    await message.answer('–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –±—É–¥—É —Ä–∞–¥ –ø–æ–º–æ—á—å!  –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π –Ω–∞–ø—Ä—è–º—É—é üëá',reply_markup=kb.contact_inline)



"""@user.message(F.text == '–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç')
async def personal_cab(message: Message):
    """